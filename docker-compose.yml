services:
  npm-frontend:
    image: node:20
    volumes:
      - ./frontend:/app/frontend
    working_dir: /app/frontend
    command: ["npm", "install"]
  frontend:
    build:
        context: .
        dockerfile: ./docker/frontend.Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app/frontend
    depends_on:
      backend:
        condition: service_started
      npm-frontend:
        condition: service_completed_successfully
  npm-backend:
    image: node:20
    volumes:
      - ./backend:/app/backend
    working_dir: /app/backend
    command: ["npm", "install"]
  backend:
    build:
        context: .
        dockerfile: ./docker/backend.Dockerfile
    ports:
      - "80:3000"
      - "9229:9229"
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_started
      npm-backend:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - MONGO_URI=mongodb://mongodb/mongo
  db:
    image: postgres:12
    ports:
      - "5433:5432"
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
  mongodb:
    image: mongo:4
    ports:
      - "27017:27017"
    volumes:
        - mongodb:/data/db
volumes:
    db:
    mongodb: